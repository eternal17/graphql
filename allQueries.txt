// for the username
  // query {
  //   user (where: {id: {_eq: 171}}) {
  //     login
  //   }
  // }

  // `    query {
  //   transaction (  where: {
  //     _and: [{ type: { _eq: "xp" } }, { userId: { _eq: 171 } }]
  //   }) {
  //     userId
  //     amount
  //     type
  //     createdAt
  //   }
  // }`



  // ALL PROJECTS ABOVE 5KB in div 01

  // query {
  //   transaction (  where: {
  //     _and: [{ type: { _eq: "xp" } }, { userId: { _eq: 171 } }, {path:{_iregex:"/london/div-01/"}, amount:{_gt:4999}}]
  //  } order_by: {createdAt:desc} ) {
  //     amount
  //     type
  //     createdAt
  //    path
  //   }
  // }

  // all projects above 2.5kb in piscine go

  // query {
  //   transaction (  where: {
  //     _and: [{ type: { _eq: "xp" } }, { userId: { _eq: 171 } }, {path:{_iregex:"piscine-go"}, amount:{_gt:2500}}]
  //  } order_by: {createdAt:desc} ) {
  //     amount
  //     type
  //     createdAt
  //    path
  //   }
  // }


  // all the xp in div01 including 2 duplicates that need to be removed from object
  
{
  user(where: {login: {_eq: "eternal17"}}) {
    login
    id
    transactions(
      where: {_or: [{_and: [{amount: {_gt: 4999}}, {type: {_eq: "xp"}}, {object: {type: {_eq: "project"}}}]}, 
        						{_and: [{path: {_iregex: "check-point"}}, {type: {_eq: "xp"}}]}, 
        						{_and: [{type: {_eq: "xp"}}, {object: {type: {_eq: "piscine"}}}]}]}
      order_by: {createdAt: desc}
    ) {
      amount
      type
      object {
        name
      }
    }
  }
}


// QUERY: get all of the created at submitted dates for the projects as well as the grades for each project 

{
  user(where: {login: {_eq: "eternal17"}}) {
    progresses(
      where: {_and: [{object: {type: {_eq: "project"}}}, {isDone: {_eq: true}}]}
    order_by: {createdAt: desc}) {
      object {
        name
      }
      createdAt
      updatedAt
      grade
    }
  }
}